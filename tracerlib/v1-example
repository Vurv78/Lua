--@name Lib Testing
--@author Vurv
--@client
--@include libs.tracer.txt
--@model models/dav0r/camera.mdl

Finished = false
Enabled = false
Holo = holograms.create(Vector(),Angle(),"models/holograms/cube.mdl",Vector(0.5,0.5,0.5))
libs_tracer = require("libs.tracer.txt")
function dotrace(LData,T)
    local X = LData.x
    local Y = LData.y
    local InitPos = LData.pos
    local Dist = InitPos:getDistance(T.HitPos)/1000
    local SunDir,_ = game.getSunInfo()
    local Shading = T.HitNormal:dot(SunDir)
    Holo:setPos(T.HitPos)
    return T.HitSky and Color(0,0,255) or (Color(255,255,255)*(Shading+1))
end
function dofinish()
    Finished = true
    print("finished!")
end

hook.add("renderoffscreen","",function()
    while Enabled and not Finished and quotaAverage()<quotaMax()*0.05 do
        libs_tracer.callTrace(1)
    end
end)

hook.add("render","",function()
    if not Enabled then
        render.drawText(256,256,"Press E to Enable",1)
    end
end)

libs_tracer.createTrace(1,Vector(128,128),dotrace,dofinish)
libs_tracer.setCamera(1,chip())
libs_tracer.toggleTrace(1,false)

hook.add("starfallUsed","",function(ply)
    if ply ~= player() then return end
    Enabled = not Enabled
    if Enabled then
        libs_tracer.showTrace(1,true)
    end
end)
